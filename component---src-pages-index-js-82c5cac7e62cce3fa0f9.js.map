{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["SEL","pluginWrapper","originalColors","App","props","state","fullpages","text","className","md","id","onLeave","origin","destination","direction","console","log","handleChangeColors","newColors","this","sectionsColor","setState","handleAddSection","length","push","Math","random","handleRemoveSection","newPages","pop","moveSectionDown","window","fullpage_api","render","debug","licenseKey","navigation","anchors","sectionSelector","bind","comp","Wrapper","map","key","React","Component"],"mappings":"8OAWMA,G,UAAM,kBAKNC,EAAgB,aAMhBC,EAAiB,CAAC,UAAW,UAAW,UAAW,UAAW,SAAU,OAAQ,SAAU,UAE1FC,E,YACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CACXC,UAAW,CACT,CACEC,KAAM,kBAAC,IAAD,CAAKC,UAAU,mBACrB,kBAAC,IAAD,CAAKC,GAAG,IAAID,UAAU,mCACpB,6DAEE,6BAFF,yBAKF,kBAAC,IAAD,CAAKC,GAAG,IAAID,UAAU,0BACpB,kBAAC,IAAD,CAAKA,UAAU,kCACb,kBAAC,IAAD,KACE,uBAAGE,GAAG,aACN,uBAAGA,GAAG,aACN,uBAAGA,GAAG,aACN,uBAAGA,GAAG,kBAMd,CACEH,KAAM,aAER,CACEA,KAAM,eA5BK,E,4CAkCnBI,QAAA,SAAQC,EAAQC,EAAaC,GAC3BC,QAAQC,IAAI,UAAW,CAAEJ,SAAQC,cAAaC,e,EAKhDG,mBAAA,WACE,IAAMC,EAC4B,WAAhCC,KAAKd,MAAMe,cAAc,GAAzB,UACQlB,GACJ,CAAC,SAAU,OAAQ,SACzBiB,KAAKE,SAAS,CACZD,cAAeF,K,EAInBI,iBAAA,WACEH,KAAKE,UAAS,SAAAhB,GAAU,IACdC,EAAcD,EAAdC,UACAiB,EAAWjB,EAAXiB,OAMR,OALAjB,EAAUkB,KAAK,CACbjB,KAAK,YAAYgB,EAAS,GAC1Bb,GAAIe,KAAKC,WAGJ,CACLpB,UAAU,YAAKA,Q,EAKrBqB,oBAAA,WACER,KAAKE,UAAS,SAAAhB,GAAU,IACdC,EAAcD,EAAdC,UACFsB,EAAQ,YAAOtB,GAGrB,OAFAsB,EAASC,MAEF,CAAEvB,UAAWsB,O,EAIxBE,gBAAA,WACEC,OAAOC,aAAaF,mB,EAGtBG,OAAA,WAAU,IACA3B,EAAca,KAAKd,MAAnBC,UAER,IAAKA,EAAUiB,OACb,OAAO,KA6BT,OACE,yBAAKf,UAAU,OACb,kBAAC,IAAD,MACA,kBAAC,IAAD,CACE0B,OAAK,EAGLjC,cAAeA,EAGfkC,WAAY,gBACZC,YAAU,EACVC,QAAS,CAAC,YAAa,aAAc,aACrCC,gBA1IO,kBA2IP3B,QAASQ,KAAKR,QAAQ4B,KAAKpB,MAC3BC,cAAeD,KAAKd,MAAMe,cAE1Ba,OAAQ,SAAAO,GAAI,OACV,kBAAC,IAAcC,QAAf,KACGnC,EAAUoC,KAAI,gBAAGnC,EAAH,EAAGA,KAAH,OACb,yBAAKoC,IAAKpC,EAAMC,UAAWR,GACzB,kBAAC,IAAD,KACCO,a,GAvIDqC,IAAMC,WAmJT1C,a","file":"component---src-pages-index-js-82c5cac7e62cce3fa0f9.js","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\r\nimport React from \"react\"\r\nimport StyledNavbar from \"../components/styledNavbar\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"../styles/styles.css\"\r\nimport { Row, Col, Container } from \"react-bootstrap\"\r\nimport ReactFullpage from \"@fullpage/react-fullpage\";\r\n\r\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\";\r\n\r\n\r\nconst SEL = 'custom-section';\r\nconst SECTION_SEL = `.${SEL}`;\r\n\r\n// NOTE: if using fullpage extensions/plugins put them here and pass it as props.\r\n// This is no longer required for the scrollOverflow option.\r\nconst pluginWrapper = () => {\r\n  /*\r\n  * require('./fullpage.fadingEffect.min'); // Optional. Required when using the \"fadingEffect\" extension.\r\n  */\r\n};\r\n\r\nconst originalColors = ['#ff5f45', '#0798ec', '#fc6c7c', '#435b71', 'orange', 'blue', 'purple', 'yellow'];\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fullpages: [\r\n        {\r\n          text: <Row className=\"page first-page\">\r\n          <Col md=\"9\" className=\"align-self-center alsign-middle\">\r\n            <p>\r\n              Combating Childhood Cancer Club\r\n              <br></br> est. September 2018\r\n            </p>\r\n          </Col>\r\n          <Col md=\"3\" className=\"justify-content-center\">\r\n            <Col className=\"align-self-center align-middle\">\r\n              <Row>\r\n                <p id=\"countUp1\"></p>\r\n                <p id=\"countUp2\"></p>\r\n                <p id=\"countUp3\"></p>\r\n                <p id=\"countUp4\"></p>\r\n              </Row>\r\n            </Col>\r\n          </Col>\r\n        </Row> ,\r\n        },\r\n        {\r\n          text: 'Section 2',\r\n        },\r\n        {\r\n          text: 'Section 3',\r\n        }\r\n      ],\r\n    };\r\n  }\r\n\r\n  onLeave(origin, destination, direction) {\r\n    console.log('onLeave', { origin, destination, direction });\r\n    // arguments are mapped in order of fullpage.js callback arguments do something\r\n    // with the event\r\n  }\r\n\r\n  handleChangeColors() {\r\n    const newColors =\r\n      this.state.sectionsColor[0] === 'yellow'\r\n        ? [...originalColors]\r\n        : ['yellow', 'blue', 'white'];\r\n    this.setState({\r\n      sectionsColor: newColors,\r\n    });\r\n  }\r\n\r\n  handleAddSection() {\r\n    this.setState(state => {\r\n      const { fullpages } = state;\r\n      const { length } = fullpages;\r\n      fullpages.push({\r\n        text: `section ${length + 1}`,\r\n        id: Math.random(),\r\n      });\r\n\r\n      return {\r\n        fullpages: [...fullpages],\r\n      };\r\n    });\r\n  }\r\n\r\n  handleRemoveSection() {\r\n    this.setState(state => {\r\n      const { fullpages } = state;\r\n      const newPages = [...fullpages];\r\n      newPages.pop();\r\n\r\n      return { fullpages: newPages };\r\n    });\r\n  }\r\n\r\n  moveSectionDown() {\r\n    window.fullpage_api.moveSectionDown();\r\n  }\r\n\r\n  render() {\r\n    const { fullpages } = this.state;\r\n\r\n    if (!fullpages.length) {\r\n      return null;\r\n    }\r\n\r\n    const Menu = () => (\r\n      <div\r\n        className=\"menu\"\r\n        style={{\r\n          position: 'fixed',\r\n          top: 0,\r\n          zIndex: 100,\r\n        }}\r\n      >\r\n        <ul class=\"actions\">\r\n          <li>\r\n            <button onClick={() => this.handleAddSection()}>Add Section</button>\r\n            <button onClick={() => this.handleRemoveSection()}>\r\n              Remove Section\r\n            </button>\r\n            <button onClick={() => this.handleChangeColors()}>\r\n              Change background colors\r\n            </button>\r\n            <button onClick={() => this.moveSectionDown()}>\r\n              Move Section Down\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <StyledNavbar></StyledNavbar>\r\n        <ReactFullpage\r\n          debug /* Debug logging */\r\n\r\n          // Required when using extensions\r\n          pluginWrapper={pluginWrapper}\r\n\r\n          // fullpage options\r\n          licenseKey={'YOUR_KEY_HERE'} // Get one from https://alvarotrigo.com/fullPage/pricing/\r\n          navigation\r\n          anchors={['firstPage', 'secondPage', 'thirdPage']}\r\n          sectionSelector={SECTION_SEL}\r\n          onLeave={this.onLeave.bind(this)}\r\n          sectionsColor={this.state.sectionsColor}\r\n\r\n          render={comp => (\r\n            <ReactFullpage.Wrapper>\r\n              {fullpages.map(({ text }) => (\r\n                <div key={text} className={SEL}>\r\n                  <Container>\r\n                  {text}\r\n                  </Container>\r\n                </div>\r\n              ))}\r\n            </ReactFullpage.Wrapper>\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"],"sourceRoot":""}